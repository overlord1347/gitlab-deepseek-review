stages:
  - review

variables:
  REVIEW_API_URL: $YOUR_URL_WITH_GO_LANG_PROJECT
  GITLAB_API_TOKEN: $YOUR_GITLAB_TOKEN

review_mr:
  image: ubuntu:latest
  stage: review

  before_script:
    - apt-get update
    - apt-get install -y curl jq

  script:
    - |
      echo "CI_API_V4_URL=$CI_API_V4_URL"
      echo "CI_PROJECT_ID=$CI_PROJECT_ID"
      echo "CI_MERGE_REQUEST_IID=$CI_MERGE_REQUEST_IID"
      echo "–î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${#GITLAB_API_TOKEN} —Å–∏–º–≤–æ–ª–æ–≤"
      curl --silent --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/changes" -o raw_response.json
      cat raw_response.json
      jq '.' raw_response.json > formatted.json
      jq -r '.changes | map(.diff) | join("\n")' raw_response.json > diff.txt
      echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ diff.txt:"
      cat diff.txt
      
      echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ AI-—Å–µ—Ä–≤–∏—Å"
      jq -n --arg diff "$(cat diff.txt)" '{diff: $diff}' > payload.json
      curl -s -X POST "$REVIEW_API_URL" -H "Content-Type: application/json" --data-binary "@payload.json" -o response.json

      echo "üí¨ –û—Ç–≤–µ—Ç –æ—Ç AI:"
      cat response.json

      echo "üìù –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–≤—å—é –∏–∑ JSON"
      REVIEW_CONTENT=$(jq -r '.review' response.json)
      echo "$REVIEW_CONTENT" > review.txt

      echo "üìÑ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π1:"
      cat review.txt

      echo "üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ Merge Request"
      curl --request POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes" --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" --header "Content-Type: application/json" --data '{"body": '"$(jq -aRs . review.txt)"'}'

  only:
    - merge_requests
